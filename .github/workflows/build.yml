name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # 5eTools release version (https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases)
  VERSION_5ETOOLS: "v1.169.3"
  
  # json5e-convert-cli release version (https://github.com/ebullient/json5e-convert-cli/releases)
  JSON5E_CONVERT_CLI_VERSION: "1.0.16"
  
  # comma-separated list of sources (books, adventures, ...) - leave empty for SRD only
  # For list, see https://github.com/ebullient/json5e-convert-cli/blob/main/src/main/java/dev/ebullient/json5e/tools5e/CompendiumSources.java
  SOURCES: "PHB, DMG, MM, BGDIA, WDH, AL, TOA"

jobs:
  jbang:
    runs-on: ubuntu-latest
    name: convert
    steps:
    - name: checkout
      uses: actions/checkout@v3
    - uses: actions/cache@v1
      with:
        path: /root/.jbang
        key: $-jbang-$
        restore-keys: |
            $-jbang-
    
    # Prepares the environment and downloads 5etool data (excludes the images)
    - name: "prepare and pull 5etools non-image data"
      run: |
        sudo apt-get update; sudo apt-get -y install curl unzip zip
        curl -L https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${{ env.VERSION_5ETOOLS }}/5etools-${{ env.VERSION_5ETOOLS }}.zip -o 5etools.zip
        mkdir 5etools
        unzip -q 5etools.zip -d 5etools || echo "unzip finished with errors. yolo."
        
        # Build list of books + adventures (space-separated), setup execution
        BOOKS=$(echo $(find "5etools/data/book" | tail -n +2))
        ADVENTURES=$(echo $(find "5etools/data/adventure" | tail -n +2))

        echo "BOOKS=$BOOKS" >> $GITHUB_ENV
        echo "ADVENTURES=$ADVENTURES" >> $GITHUB_ENV
        
        # Setup sources argumment (accounting for empty)
        SOURCES_ARG=""
        if [ -n "${{ env.SOURCES }}" ]; then SOURCES_ARG="-s ${{ env.SOURCES }}"; fi
        echo "SOURCES_ARG=$SOURCES_ARG" >> $GITHUB_ENV
    
    # Run the json5e-convert-cli tool (without images)
    - name: jbang
      uses: jbangdev/jbang-action@v0.99.1
      with:
        trust: https://jitpack.io/dev/ebullient/json5e-convert-cli
        script: https://jitpack.io/dev/ebullient/json5e-convert-cli/${{ env.JSON5E_CONVERT_CLI_VERSION }}/json5e-convert-cli-${{ env.JSON5E_CONVERT_CLI_VERSION }}-runner.jar
        scriptargs: "-o collapsed_no_images --monster monster_template.txt --spell spell_template.txt ${{ env.SOURCES_ARG }} 5etools/data ${{ env.BOOKS }} ${{ env.ADVENTURES }}"
      env:
        JBANG_REPO: /root/.jbang/repository
        GITHUB_TOKEN: $
    
    # Zip up the markdown
    - name: compress
      run: zip -q -r collapsed_sources_no_images.zip collapsed_no_images
       
    # Download the 5etools image data and extract the data
    - name: "pull images"
      if: ${{ env.SOURCES != '' }}
      run: |
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${VERSION_5ETOOLS}/img-${VERSION_5ETOOLS}.z01" -o img-${VERSION_5ETOOLS}.z01
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${VERSION_5ETOOLS}/img-${VERSION_5ETOOLS}.z02" -o img-${VERSION_5ETOOLS}.z02
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${VERSION_5ETOOLS}/img-${VERSION_5ETOOLS}.z03" -o img-${VERSION_5ETOOLS}.z03
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${VERSION_5ETOOLS}/img-${VERSION_5ETOOLS}.z04" -o img-${VERSION_5ETOOLS}.z04
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${VERSION_5ETOOLS}/img-${VERSION_5ETOOLS}.z05" -o img-${VERSION_5ETOOLS}.z05
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${VERSION_5ETOOLS}/img-${VERSION_5ETOOLS}.z06" -o img-${VERSION_5ETOOLS}.z06
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${VERSION_5ETOOLS}/img-${VERSION_5ETOOLS}.z07" -o img-${VERSION_5ETOOLS}.z07
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${VERSION_5ETOOLS}/img-${VERSION_5ETOOLS}.z08" -o img-${VERSION_5ETOOLS}.z08
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${VERSION_5ETOOLS}/img-${VERSION_5ETOOLS}.z09" -o img-${VERSION_5ETOOLS}.z09
        curl -L "https://github.com/5etools-mirror-1/5etools-mirror-1.github.io/releases/download/${VERSION_5ETOOLS}/img-${VERSION_5ETOOLS}.zip" -o img-${VERSION_5ETOOLS}.zip
        zip -q -s- img-${VERSION_5ETOOLS}.zip -O img-combined.zip
        unzip -q img-combined.zip -d 5etools
        rm -f img-${VERSION_5ETOOLS}.z*
        rm -f img-combined.zip
    
    # Run the json5e-convert-cli tool (with images)
    - name: jbang
      if: ${{ env.SOURCES != '' }}
      uses: jbangdev/jbang-action@v0.99.1
      with:
        trust: https://jitpack.io/dev/ebullient/json5e-convert-cli
        script: https://jitpack.io/dev/ebullient/json5e-convert-cli/${{ env.JSON5E_CONVERT_CLI_VERSION }}/json5e-convert-cli-${{ env.JSON5E_CONVERT_CLI_VERSION }}-runner.jar
        scriptargs: "-o collapsed_with_images --monster monster_template.txt --spell spell_template.txt ${{ env.SOURCES_ARG }} 5etools/data 5etools/img ${{ env.BOOKS }} ${{ env.ADVENTURES }}"
      env:
        JBANG_REPO: /root/.jbang/repository
        GITHUB_TOKEN: $
    
    # Zip up the markdown and images
    - name: compress
      if: ${{ env.SOURCES != '' }}
      run: zip -q -r collapsed_sources_with_tokens.zip collapsed_with_images
        
    # Create a Github release
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: "${{ env.VERSION_5ETOOLS }}-${{ env.JSON5E_CONVERT_CLI_VERSION }}-${{ github.sha }}"
        tag_name: "${{ env.VERSION_5ETOOLS }}-${{ env.JSON5E_CONVERT_CLI_VERSION }}-${{ github.sha }}"
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    # Add markdown-only zip artifact to the release
    - name: upload non-image artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: collapsed_sources_no_images.zip
        asset_name: collapsed_sources_no_images.zip
        asset_content_type: application/zip

    # Add markdown + image zip artifact to the release
    - name: upload image artifact
      if: ${{ env.SOURCES != '' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: collapsed_sources_with_tokens.zip
        asset_name: collapsed_sources_with_tokens.zip
        asset_content_type: application/zip
    
